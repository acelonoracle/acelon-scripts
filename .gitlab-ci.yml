include:
  - project: 'papers/papers-internal/internal'
    file: '/.base-gitlab-ci.yml'

variables:
  TEST_TAG: $CI_PROJECT_NAME:test_$CI_COMMIT_SHA
  NAMESPACE: "acelon-scripts"

stages:
  - build
  - publish
  - deploy

.base_build:
  script:
    - docker build -f Dockerfile.$SCRIPT_NAME -t $GOOGLE_TAG-$CI_ENVIRONMENT_NAME-$SCRIPT_NAME-$NETWORK --build-arg environment=$NETWORK .

# Development builds - matrix for all script/network combinations
build-dev-testnet:
  stage: build
  variables:
    NETWORK: "testnet"
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  script:
    - !reference [.base_build, script]
  environment:
    name: development
    action: prepare

build-dev-mainnet:
  stage: build
  variables:
    NETWORK: "mainnet"
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  script:
    - !reference [.base_build, script]
  environment:
    name: development
    action: prepare

# Production builds - matrix for all script/network combinations
build-prod-testnet:
  stage: build
  variables:
    NETWORK: "testnet"
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  script:
    - !reference [.base_build, script]
  environment:
    name: production
    action: prepare

build-prod-mainnet:
  stage: build
  variables:
    NETWORK: "mainnet"
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  script:
    - !reference [.base_build, script]
  environment:
    name: production
    action: prepare

# Development publish jobs - matrix for all script/network combinations
publish-dev-testnet:
  extends: .publish-dev
  stage: publish
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "testnet"
  script:
    - echo "Publishing $SCRIPT_NAME-$NETWORK development image"
    - docker tag $GOOGLE_TAG-development-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
    - docker tag $GOOGLE_TAG-development-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_LATEST_DEV-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_LATEST_DEV-$SCRIPT_NAME-$NETWORK
  needs:
    - job: build-dev-testnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]

publish-dev-mainnet:
  extends: .publish-dev
  stage: publish
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "mainnet"
  script:
    - echo "Publishing $SCRIPT_NAME-$NETWORK development image"
    - docker tag $GOOGLE_TAG-development-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
    - docker tag $GOOGLE_TAG-development-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_LATEST_DEV-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_LATEST_DEV-$SCRIPT_NAME-$NETWORK
  needs:
    - job: build-dev-mainnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]

# Production publish jobs - matrix for all script/network combinations
publish-prod-testnet:
  extends: .publish-prod
  stage: publish
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "testnet"
  script:
    - echo "Publishing $SCRIPT_NAME-$NETWORK production image"
    - docker tag $GOOGLE_TAG-production-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
    - docker tag $GOOGLE_TAG-production-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_LATEST-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_LATEST-$SCRIPT_NAME-$NETWORK
  needs:
    - job: build-prod-testnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]

publish-prod-mainnet:
  extends: .publish-prod
  stage: publish
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "mainnet"
  script:
    - echo "Publishing $SCRIPT_NAME-$NETWORK production image"
    - docker tag $GOOGLE_TAG-production-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
    - docker tag $GOOGLE_TAG-production-$SCRIPT_NAME-$NETWORK $GOOGLE_TAG_LATEST-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
    - docker push $GOOGLE_TAG_LATEST-$SCRIPT_NAME-$NETWORK
  needs:
    - job: build-prod-mainnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]

# Development deploy jobs - matrix for all script/network combinations
deploy-dev-testnet:
  stage: deploy
  extends: 
    - .base_deployment
    - .run_dev_rules
  when: manual
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "testnet"
    IMAGE_TAG: $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
  needs:
    - job: publish-dev-testnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]
  environment:
    name: development

deploy-dev-mainnet:
  stage: deploy
  extends: 
    - .base_deployment
    - .run_dev_rules
  when: manual
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "mainnet"
    IMAGE_TAG: $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
  needs:
    - job: publish-dev-mainnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]
  environment:
    name: development

# Production deploy jobs - matrix for all script/network combinations
deploy-prod-testnet:
  stage: deploy
  extends: 
    - .base_deployment
    - .run_prod_rules
  when: manual
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "testnet"
    IMAGE_TAG: $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
  needs:
    - job: publish-prod-testnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]
  environment:
    name: production

deploy-prod-mainnet:
  stage: deploy
  extends: 
    - .base_deployment
    - .run_prod_rules
  when: manual
  parallel:
    matrix:
      - SCRIPT_NAME: ["peaq", "etherlink"]
  variables:
    NETWORK: "mainnet"
    IMAGE_TAG: $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
  needs:
    - job: publish-prod-mainnet
      parallel:
        matrix:
          - SCRIPT_NAME: ["peaq", "etherlink"]
  environment:
    name: production

.base_deployment:
  script:
    - find k8s -type f -name \*.yaml -exec sed -i "s|__NAMESPACE_NAME__|"$NAMESPACE"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__PROJECT_NAME__|"$CI_PROJECT_NAME-$SCRIPT_NAME-$NETWORK"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__TO_BE_REPLACED_BY_IMAGE_TAG__|"$IMAGE_TAG"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__IMAGE_TAG__|"$IMAGE_TAG"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__NETWORK__|"$NETWORK"|g" {} +

    # applying the files
    - kubectl apply -f k8s/common/namespace.yaml
    - kubectl apply -f k8s/common/config-map.yaml
    # For k8 deployment
    # - kubectl apply -f k8s/common/ --recursive
    - kubectl apply -f k8s/common/secret.yaml
    - kubectl apply -f k8s/$SCRIPT_NAME/cronjob.yaml

.deploy-dev-testnet:
  extends: 
    - .base_deployment
    - .run_dev_rules
  variables:
    NETWORK: "testnet"
    IMAGE_TAG: $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
  environment:
    name: development

.deploy-dev-mainnet:
  extends: 
    - .base_deployment
    - .run_dev_rules
  variables:
    NETWORK: "mainnet"
    IMAGE_TAG: $GOOGLE_TAG_DEV-$SCRIPT_NAME-$NETWORK
  environment:
    name: development

.deploy-prod-testnet:
  extends: 
    - .base_deployment
    - .run_prod_rules
  variables:
    NETWORK: "testnet"
    IMAGE_TAG: $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
  environment:
    name: production

.deploy-prod-mainnet:
  extends: 
    - .base_deployment
    - .run_prod_rules
  variables:
    NETWORK: "mainnet"
    IMAGE_TAG: $GOOGLE_TAG-$SCRIPT_NAME-$NETWORK
  environment:
    name: production
